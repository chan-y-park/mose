# Mose Configuration File.
# WARNING: This file is not a Python code, but will be interpreted by Python's 
# ConfigParser module.
# WARNING: option names are not case-sensitive, use lowercases only. 

[fibration]
# u is the coordinate of the base space.
g2 = - 1.0 * (4.0 ** (2.0/3)) * (u ** 2) 
g3 = - 4.0 * (2.0 * (u ** 3) - 1.0) / (27**(1.0/2))
#g2 = - 8.0 * (2.0 ** (1.0/3)) * (u ** 2) 
#g3 = - 4.0 * (2.0 * (u ** 3) - 1.0) / (27**(1.0/2))

[ODE]
# The following parameter controls what value of abs(det(pf_matrix)) wilL
# raise an exception to determine that a singularity ran too close to a 
# singularity, and should be dropped.
trajectory_singularity_threshold = 10**5

pf_odeint_mxstep = 5000000

# Range options for differential equation solver, odeint(): 
# [initial time, final time, number of steps]
# primary_k_wall_odeint_range = [0.0, 0.03, 10]
# odeint_range = [0.0, 20.0, 450]
odeint_range = [0.0, 100.0, 300]

[KSWCF]
filtration_degree = 5
dsz_matrix = [[0, -1], [1, 0]]

[plotting]
range = [[-3, 3], [-3, 3]]

[intersection search]
# Size of a bin for the coarse-graining of the intersection module
bin_size = .2 

[branch cut]
### the angle at which branch-cuts should be oriented
theta = 3.14159265359 / 2  

# how far way from the singularity the locus of the branch cut extends
cutoff = 10.0         

[K-wall network]
# Number of iterations to construct additional K-walls
n_iterations = 1

[MS wall]
# Range of the phases of K-wall network to construct 
# in order to construct walls of marginal stability
theta_range = [0, pi, 100]
# theta_range = [2*pi/100, 3*pi/100, 16]

[file IO]
# Options for saving to files
# Available options: 0, 1, 2 (up to python 2.7.8)
pickle_protocol = 0

[multiprocessing]
# set 0 to use all available cores, 
# otherwise set the number of processes to run in parallel.
n_processes = 0
