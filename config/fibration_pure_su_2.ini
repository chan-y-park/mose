# Mose Configuration File.
# WARNING: This file is not a Python code, but will be interpreted by Python's 
# ConfigParser module.
# WARNING: option names are not case-sensitive, use lowercases only. 

[fibration]
# u is the coordinate of the base space.
f = (-(l**4) + 4*(u**2)/3) / (-4.0)
g = (-(l**4) * u/3 + 8*(u**3)/27) / (-4.0)

[fibration parameters]
l = 1.0 

[charge]
### Giving by hand the charges at branch points, 
### must update with algorithm that determines actual charge at branch-point
fixed_charges = [[1, 0], [-1, 2]] 

#dsz_matrix = [[0, 1], [-1, 0]]

[ODE]
# The following parameter controls what value of abs(det(pf_matrix)) wilL
# raise an exception to determine that a singularity ran too close to a 
# singularity, and should be dropped.
trajectory_singularity_threshold = 10**6 
#nsteps = 5000000
size_of_step= 1e-1
num_steps = 500
#num_steps = 2

# Range options for differential equation solver: 
# [initial time, final time, number of steps]
#primary_k_wall_ode_range = [0.0, 0.5, 50]
#ode_range = [0.0, 100.0, 300]

[KSWCF]
filtration_degree = 5

[plotting]
range = [[-3, 3], [-3, 3]]

[intersection search]
# Size of a bin for the coarse-graining of the intersection module
bin_size = .2 

[branch cut]
### the angle at which branch-cuts should be oriented
theta = 3.14159265359 / 2  

# how far way from the singularity the locus of the branch cut extends
cutoff = 10.0         

[K-wall network]
n_iterations = 5

[MS wall]
# Range of the phases of K-wall network to construct 
# in order to construct walls of marginal stability
theta_range = [0, pi, 25]

[file IO]
# Options for saving to files
# Available options: 0, 1, 2 (up to python 2.7.8)
pickle_protocol = 0

[multiprocessing]
# set 0 to use all available cores, 
# otherwise set the number of processes to run in parallel.
n_processes = 0
