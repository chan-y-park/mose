# Mose Configuration File.
# WARNING: This file is not a Python code, but will be interpreted by Python's 
# ConfigParser module.
# WARNING: option names are not case-sensitive, use lowercases only. 

[fibration]
# u is the coordinate of the base space.
#
#	CASE OF		m_1 = m_2 = m, 		m_3 = m_4 = 0
#
#f = (1.0 / 27.0) * (-9.0 * (e_2**4) * (m**4) - 9.0 * (e_3**4) * (m**4) - 18.0 * e_2 * (e_3**3) * (m**4) - 27.0 * (e_2**2) * (e_3**2) * (m**4) - 18.0 * (e_2**3) * e_3 * (m**4) + 81.0 * e_2 * (e_3**2) * (m**2) * u + 81.0 * (e_2**2) * e_3 * (m**2) * u - 27.0 * (e_2**2) * (u**2) - 27.0 * (e_3**2) * (u**2) - 27.0 * e_2 * e_3 * (u**2))
#g = (1.0 / 27.0) * (2 * (e_2**6) * (m**6) + 2.0 * (e_3**6) * (m**6) + 6.0 * e_2 * (e_3**5) * (m**6) - 15.0 * (e_2**2) * (e_3**4) * (m**6) - 40.0 * (e_2**3) * (e_3**3) * (m**6) - 15.0 * (e_2**4) * (e_3**2) * (m**6) + 6.0 * (e_2**5) * e_3 * (m**6) + 27.0 * e_2 * (e_3**4) * (m**4) * u + 54.0 * (e_2**2) * (e_3**3) * (m**4) * u + 54.0 * (e_2**3) * (e_3**2) * (m**4) * u + 27.0 * (e_2**4) * e_3 * (m**4) * u - 18.0 * (e_2**4) * (m**2) * (u**2) - 18.0 * (e_3**4) * (m**2) * (u**2) - 36.0 * e_2 * (e_3**3) * (m**2) * (u**2) - 54.0 * (e_2**2) * (e_3**2) * (m**2) * (u**2) - 36.0 * (e_2**3) * e_3 * (m**2) * (u**2) + 27.0 * e_2 * (e_3**2) * (u**3) + 27.0 * (e_2**2) * e_3 * (u**3))
#
#	ALL MASSES EQUAL 
#
f = (1.0 / 27.0) * (18.0 * (e_2**4) * (m**4) - 144.0 * (e_3**4) * (m**4) - 288.0 * e_2 * (e_3**3) * (m**4) - 27.0 * (e_2**2) * (e_3**2) * (m**4) + 117.0 * (e_2**3) * e_3 * (m**4) + 162.0 * e_2 * (e_3**2) * (m**2) * u + 162.0 * (e_2**2) * e_3 * (m**2) * u - 27.0 * (e_2**2) * (u**2) - 27.0 * (e_3**2) * (u**2) - 27.0 * e_2 * e_3 * (u**2))
g = (1.0 / 27.0) * (144.0 * (e_2**9) * (m**6) + 648.0 * e_3 * (e_2**8) * (m**6) + 324.0 * (e_3**2) * (e_2**7) * (m**6) + 2.0 * (26.0 - 945.0 * (e_3**3)) * (e_2**6) * (m**6) + 1782.0 * (e_3**5) * (e_2**4) * (m**6) + 96.0 * (e_3**2) * (e_2**4) * (m**6) + 1890.0 * (e_3**6) * (e_2**3) * (m**6) - 284.0 * (e_3**3) * (e_2**3) * (m**6) - 324.0 * (e_3**7) * (e_2**2) * (m**6) - 282.0 * (e_3**4) * (e_2**2) * (m**6) - 648.0 * (e_3**8) * e_2 * (m**6) - 168.0 * (e_3**5) * e_2 * (m**6) - 144.0 * (e_3**9) * (m**6) - 56.0 * (e_3**6) * (m**6) - 81.0 * e_3 * (e_2**4) * (m**4) * u + 135.0 * (e_3**2) * (e_2**3) * (m**4) * u + 432.0 * (e_3**3) * (e_2**2) * (m**4) * u + 216.0 * (e_3**4) * e_2 * (m**4) * u - 36.0 * (e_2**4) * (m**2) * (u**2) - 72.0 * e_3 * (e_2**3) * (m**2) * (u**2) - 108.0 * (e_3**2) * (e_2**2) * (m**2) * (u**2) - 72.0 * (e_3**3) * e_2 * (m**2) * (u**2) - 36.0 * (e_3**4) * (m**2) * (u**2) - 6.0 * (e_2**5) * (297.0 * (e_3**4) * (m**6) - 35.0 * e_3 * (m**6) + 9.0 * (m**4) * u) + 27.0 * e_3 * (e_2**2) * (u**3) + 27.0 * (e_3**2) * e_2 * (u**3))

[fibration parameters]
# when defining a variable here, i.e. A = value,
# refer to it in a different location as %(A)s.
#
#	Parameters for all m_1 = m_2 = m, 	m_3 = m_4 = 0
#
#m = 1.0 + 0.5j
#e_2 = 1.0 + 1.0j
#e_3 = 1.0 - 1.0j
#
#	Parameters for all equal masses
#
m = 1.1 - 0.3j
e_2 = -0.6 + 0.2j
e_3 = 0.3 - 0.6j





[ODE]
# The following parameter controls what value of abs(det(pf_matrix)) wilL
# raise an exception to determine that a singularity ran too close to a 
# singularity, and should be dropped.
trajectory_singularity_threshold = 10**3 
size_of_step= 1e-1
num_steps = 500

[KSWCF]
filtration_degree = 5
dsz_matrix = [[0, -1], [1, 0]]

[plotting]
range = [[-5, 5], [-5, 5]]

[intersection search]
# Size of a bin for the coarse-graining of the intersection module
bin_size = 0.2 

[K-wall network]
# Number of iterations to construct additional K-walls
n_iterations = 3

[MS wall]
# Range of the phases of K-wall network to construct 
# in order to construct walls of marginal stability
theta_range = [0, pi, 100]

[file IO]
# Options for saving to files
# Available options: 0, 1, 2 (up to python 2.7.8)
pickle_protocol = 0

[multiprocessing]
# set 0 to use all available cores, 
# otherwise set the number of processes to run in parallel.
n_processes = 0
