# Mose Configuration File.
# WARNING: This file is not a Python code, but will be interpreted by Python's 
# ConfigParser module.
# WARNING: option names are not case-sensitive, use lowercases only. 

[fibration]
# u is the coordinate of the base space.
#
#	ALL MASSES EQUAL
#
f = (1.0 / 27.0) * (18.0 * (e_2**4) * (m**4) - 144.0 * (e_3**4) * (m**4) - 288.0 * e_2 * (e_3**3) * (m**4) - 27.0 * (e_2**2) * (e_3**2) * (m**4) + 117.0 * (e_2**3) * e_3 * (m**4) + 162.0 * e_2 * (e_3**2) * (m**2) * u + 162.0 * (e_2**2) * e_3 * (m**2) * u - 27.0 * (e_2**2) * (u**2) - 27.0 * (e_3**2) * (u**2) - 27.0 * e_2 * e_3 * (u**2))
g = (1.0 / 27.0) * (-20.0 * e_2**6 * m**6 - 128.0 * e_3**6 * m**6 - 384.0 * e_2 * e_3**5 * m**6 - 228.0 * e_2**2 * e_3**4 * m**6 + 184.0 * e_2**3 * e_3**3 * m**6 + 150.0 * e_2**4 * e_3**2 * m**6 + 216.0 * e_2 * e_3**4 * m**4 * u + 432.0 * e_2**2 * e_3**3 * m**4 * u + 135.0 * e_2**3 * e_3**2 * m**4 * u - 81.0 * e_2**4 * e_3 * m**4 * u - 36.0 * e_2**4 * m**2 * u**2 - 36.0 * e_3**4 * m**2 * u**2 - 72.0 * e_2 * e_3**3 * m**2 * u**2 - 108.0 * e_2**2 * e_3**2 * m**2 * u**2 - 72.0 * e_2**3 * e_3 * m**2 * u**2 - 6.0 * e_2**5 * (e_3 * m**6 + 9.0 * m**4 * u) + 27.0 * e_2 * e_3**2 * u**3 + 27.0 * e_2**2 * e_3 * u**3)


[fibration parameters]
# when defining a variable here, i.e. A = value,
# refer to it in a different location as %(A)s.
#
#	Parameters for all equal masses -- basic
#
m = 1.1 - 0.3j
e_2 = -0.1 + 0.2j
e_3 = 0.5 - 0.3j
#
#       Parameters for all equal masses -- heavy mass
#
#m = (1.1 - 0.3j)
#e_2 = -(-0.1 - 0.2j)
#e_3 =  -(-0.1 - 0.2j) - .001




[ODE]
# The following parameter controls what value of abs(det(pf_matrix)) wilL
# raise an exception to determine that a singularity ran too close to a 
# singularity, and should be dropped.
trajectory_singularity_threshold = 10**3 
size_of_step= 1e-1
num_steps = 2000

[KSWCF]
filtration_degree = 5
dsz_matrix = [[0, -1], [1, 0]]

[plotting]
range = [[-5, 5], [-5, 5]]

[intersection search]
# Size of a bin for the coarse-graining of the intersection module
bin_size = 0.2 

[K-wall network]
# Number of iterations to construct additional K-walls
n_iterations = 2

[MS wall]
# Range of the phases of K-wall network to construct 
# in order to construct walls of marginal stability
theta_range = [0, pi, 100]

[file IO]
# Options for saving to files
# Available options: 0, 1, 2 (up to python 2.7.8)
pickle_protocol = 0

[multiprocessing]
# set 0 to use all available cores, 
# otherwise set the number of processes to run in parallel.
n_processes = 0
